// Code generated by MockGen. DO NOT EDIT.
// Source: pomo.go

// Package pomo is a generated GoMock package.
package pomo

import (
	tea "github.com/charmbracelet/bubbletea"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTimer is a mock of Timer interface
type MockTimer struct {
	ctrl     *gomock.Controller
	recorder *MockTimerMockRecorder
}

// MockTimerMockRecorder is the mock recorder for MockTimer
type MockTimerMockRecorder struct {
	mock *MockTimer
}

// NewMockTimer creates a new mock instance
func NewMockTimer(ctrl *gomock.Controller) *MockTimer {
	mock := &MockTimer{ctrl: ctrl}
	mock.recorder = &MockTimerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTimer) EXPECT() *MockTimerMockRecorder {
	return m.recorder
}

// Update mocks base method
func (m *MockTimer) Update(arg0 tea.Msg) (tea.Model, tea.Cmd) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0)
	ret0, _ := ret[0].(tea.Model)
	ret1, _ := ret[1].(tea.Cmd)
	return ret0, ret1
}

// Update indicates an expected call of Update
func (mr *MockTimerMockRecorder) Update(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockTimer)(nil).Update), arg0)
}
